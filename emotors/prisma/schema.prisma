generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address{
  id            String  @id
  cep           String  @db.VarChar(8)
  city          String  @db.VarChar(200)
  street        String  @db.VarChar(200)
  homeNumber    String  @db.VarChar(10)
  state         String  @db.VarChar(50)
  reference     String? @db.VarChar(200)
  User          User?
}

model User {
  id           String     @id 
  name         String     
  email        String     @unique @db.VarChar(50)
  cpf          String     @unique @db.VarChar(11)
  telephone    String     @unique @db.VarChar(11)
  birthDate    String     @db.VarChar(10)
  description  String?    @db.VarChar(250)
  password     String     @db.VarChar(200)
  acoountType  Boolean    @default(false)    
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  address      Address?   @relation(fields: [addressId], references: [id])
  addressId    String?    @unique
  announcement Announcement[]
  comments Comments[]

  @@map("users")
}

model Announcement {
  id           String     @id 
  model        String
  fuel         String
  mileage      String
  color        String
  pfipe        Boolean
  sellPrice    Float
  description  String
  coverImage   String
  detailsImage String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  comments Comments[]
}

model Comments {
  id               String @id
  text             String @db.VarChar(250)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String

  announcement     Announcement     @relation(fields: [announcementId], references: [id])
  announcementId   String

  @@map("comments")
}




